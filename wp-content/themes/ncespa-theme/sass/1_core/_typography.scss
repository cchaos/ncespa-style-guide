/*
//
// TYPOGRAPHY
//
*/

// CUSTOM MIXINS
// ---------------------

// force the wrapping of long links/emails/etc.
@mixin force-wrap() {
	overflow-wrap: break-word;
	word-wrap: break-word;
	-ms-word-break: break-all;
	/* This is the dangerous one in WebKit, as it breaks things wherever */
	word-break: break-all;
	/* Instead use this non-standard one: */
	word-break: break-word;
}

@mixin force-truncate($width: 100%) {
	width: $width;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

// Force-truncate only works with one-line text
// The following isn't perfect and a library like http://mikeking.io/succinct/ may be a better choice
@mixin fake-truncate($height: 2) {
  $height: $paragraph-line-height*$height;
  height: #{$height}rem;
  overflow: hidden;
  position: relative;

  padding-right: 1rem;

  &::after {
    position: absolute;
    right: 0px;
    bottom: 0px;

    width: 1rem;
    height: $paragraph-line-height;
    content: "...";
    text-align: right;
  }
}

@mixin no-break() {
	white-space: nowrap;
}


/// CUSTOM STYLES
// ---------------------

// use extension here to be able to apply same styling to non header elements
%uppercase {
  font-weight: $font-weight-bold;
  text-transform: uppercase;
  letter-spacing: .05em;
}

%section-header {
  margin-top: 2rem;
  margin-bottom: 1rem;
  @extend %uppercase;
  font-size: 1rem;
}

section h2 {
  //@extend %section-header;
}

// make sure all anchor (link) tags have smooth transitions between states
a {
  @include basic-transition;
}

// adding a class for p tags that sets a max width for ideal line length
.ideal {
	max-width: 36em;

	// make sure text stays centered
	&.text-center {
		margin-left: auto;
		margin-right: auto;
	}
}

ol.inline,
ul.inline {
  li {
    display: inline-block;
  }
}

dl.inline {
  dt, dd {
    display: inline-block;
  }

  dd {
    margin-left: 1rem;
  }
}

figcaption {
  font-weight: $font-weight-bold;
  color: $gray;
  font-size: $small-font-size*.8;
  display: block;
  margin-top: .5rem;
}

hr {
  border: none;
  height: 3px;
  background: linear-gradient(to right, $gray-light 0%, $gray-light 66%, $primary-color 66%, $primary-color 100%);

  &.opposite {
    background: linear-gradient(to right, $primary-color 0%, $primary-color 33%, $gray-light 33%, $gray-light 100%);
  }

  &.plain {
    background: $gray-light;
  }
}